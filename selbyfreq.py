#this program takes the local path to a .csv file with two columns as cmd line argument one, where the first column's values are ngrams 
#and the second column's values are the number of files each ngram appears in. It outputs a .csv file specified by argument 2, 
#which contains only the ngrams which appear in at least 100 files along with their corresponding frequencies
#__________________IMPORTS_________________________________________________________
import re
import os
import io
import sys
import shutil
import operator
from collections import defaultdict

#__________________MAIN_________________________________________________________

print("\n\n")

infp = open(sys.argv[1], "r") #open input file
buf = io.StringIO() #outbut buffer object
outfp = open(sys.argv[2], "w") #open output file

line = re.split(',|\n',infp.readline())[:2] #get first line
ngram = line[0]	#get first ngram
freq = int(line[1]) #get first ngram's frequency
m = 1
while(1):
	if line == "": #If EOF, output buffer contents to output file
	    buf.seek(0)
	    shutil.copyfileobj(buf, outfp)
	    break
	if freq >99: #if frequency greater then 99, then add ngram and it's frequency to output buffer
	    buf.write(ngram+","+str(freq)+"\n")
	try: #try to get next line, break if fail
	    line = re.split(',|\n',infp.readline())[:2]
	    ngram = line[0]
	    freq = int(line[1])
	except:
	    print("ERROR: get next line failed")
	    break
	if int(ngram, 16) > int('100000000', 16) * m: #every multiple of Ox1000000 do...
	    buf.seek(0)
	    shutil.copyfileobj(buf, outfp) #save buffer to output file containing merged frequencies
	    buf.close()
	    buf = io.StringIO() 
	    print("Progress:"+str(100*((int('100000000', 16) * m)/int('FFFFFFFFFFFF',16)))[:6]+"%", end="\n", flush=True)
	    m+=1 
buf.close()
infp.close()
outfp.close()
print("\n")
print("\nProgress:100%", flush=True)
